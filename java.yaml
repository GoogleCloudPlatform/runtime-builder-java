# Java runtime builder pipeline.

steps:

# build the user's source and generate artifacts for docker
- name: 'gcr.io/gcp-runtimes/java/runtime-builder:latest'
  args:

  # Mappings of server and JDK config names to runtime images.
  - '--server-runtimes-map'
  - '*|*=gcr.io/google_appengine/jetty:9'
  - 'openjdk8|*=gcr.io/google_appengine/jetty:9'
  - 'openjdk8|jetty9=gcr.io/google_appengine/jetty:9'
  - 'openjdk8|tomcat8=gcr.io/google_appengine/tomcat:8'
  - '*|jetty9=gcr.io/google_appengine/jetty:9'
  - '*|tomcat8=gcr.io/google_appengine/tomcat:8'

  # Mappings of JDK config names to images.
  - '--jdk-runtimes-map'
  - '*=gcr.io/google_appengine/openjdk:8'
  - 'openjdk8=gcr.io/google_appengine/openjdk:8'

  # Image to use for maven builds
  - '--maven-docker-image'
  - 'gcr.io/cloud-builders/java/mvn:3.5.0-jdk-8'

  # Image to use for gradle builds
  - '--gradle-docker-image'
  - 'gradle:3.5-jdk8'

# execute the docker build to produce the resulting image
- name: 'gcr.io/cloud-builders/docker:latest'
  args: ['build', '--tag=$_OUTPUT_IMAGE', '.']

images: ['$_OUTPUT_IMAGE']
